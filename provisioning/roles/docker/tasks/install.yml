---

- name: Install system dependencies
  become: yes
  package:
    name: "{{ item }}"
    state: present
  register: result
  retries: 3
  until: result is succeeded
  with_items: "{{ system_dependencies }}"

- name: Remove old docker package
  become: yes
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ old_docker_packages }}"

- name: Add debian docker repository
  become: yes
  block:
  - name: Add docker GPG key
    apt_key:
      url: "{{ docker_gpg_key_url }}"
      id: "{{ docker_gpg_key }}"
      state: present

  - name: Add docker repository
    apt_repository:
      repo: "{{ docker_repo }}"
      state: present
  when: "ansible_os_family | lower == 'debian'"

- name: Install docker
  become: true
  package:
    name: "{{ docker_package }}"
    state: "{{ (docker_version == 'latest') | ternary('latest', 'present') }}"
    update_cache: true
  register: result
  retries: 3
  until: result is succeeded
  notify:
    - restart docker

- name: Install components dependent on Python
  block:
  - name: Install system python
    become: yes
    package:
      name: "{{ item }}"
      state: present
    register: result
    retries: 3
    until: result is succeeded
    with_items: "{{ system_python_packages }}"

  - name: Install pip packages
    pip:
      name:
        - docker-compose
      extra_args: --user
    environment:
        PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH}}"
  when: install_docker_compose
